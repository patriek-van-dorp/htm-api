openapi: 3.1.0
info:
  title: HTM API - Complete Spatial Pooler Integration
  description: |
    Complete spatial pooler engine integration API with production-ready implementation.
    This extends the base HTM API with fully integrated spatial pooler functionality
    that enables TDD tests to run against actual implementation.
  version: 1.0.0
  contact:
    name: HTM Integration Team
    email: integration@htm-project.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.htm-project.com/v1
    description: Production server
  - url: https://staging-api.htm-project.com/v1
    description: Staging server
  - url: http://localhost:8080/api/v1
    description: Local development server

paths:
  /health:
    get:
      summary: Complete system health check
      description: |
        Comprehensive health check including spatial pooler engine status,
        performance metrics, and system resource utilization.
      operationId: getHealthStatus
      tags:
        - Health
        - Integration
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: System is degraded or unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthDegradedResponse'

  /spatial-pooler/status:
    get:
      summary: Spatial pooler engine detailed status
      description: |
        Detailed status of the spatial pooler engine including configuration,
        runtime metrics, and HTM-specific properties.
      operationId: getSpatialPoolerStatus
      tags:
        - Spatial Pooler
        - Monitoring
      responses:
        '200':
          description: Spatial pooler status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialPoolerStatusResponse'
        '500':
          description: Failed to retrieve spatial pooler status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /spatial-pooler/process:
    post:
      summary: Process data through spatial pooler engine
      description: |
        Process encoder output through the production spatial pooler engine.
        This endpoint uses the actual implementation and supports all HTM
        properties validation and performance monitoring.
      operationId: processSpatialPooling
      tags:
        - Spatial Pooler
        - Processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialPoolingRequest'
      responses:
        '200':
          description: Spatial pooling processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialPoolingResponse'
        '400':
          description: Invalid request or input validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: Internal spatial pooler engine error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineErrorResponse'

  /spatial-pooler/config:
    get:
      summary: Get current spatial pooler configuration
      description: Retrieve the current spatial pooler configuration
      operationId: getSpatialPoolerConfig
      tags:
        - Spatial Pooler
        - Configuration
      responses:
        '200':
          description: Configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialPoolerConfigResponse'

    put:
      summary: Update spatial pooler configuration
      description: |
        Update spatial pooler configuration in production environment.
        Includes validation and backup of previous configuration.
      operationId: updateSpatialPoolerConfig
      tags:
        - Spatial Pooler
        - Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConfigResponse'
        '400':
          description: Invalid configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'

  /spatial-pooler/validation/htm-properties:
    get:
      summary: Validate HTM properties
      description: |
        Validate current HTM mathematical and biological properties
        of the spatial pooler implementation for testing integration.
      operationId: validateHTMProperties
      tags:
        - Spatial Pooler
        - Validation
        - Testing
      responses:
        '200':
          description: HTM properties validation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTMValidationResponse'

components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - version
        - components
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        components:
          type: object
          properties:
            spatial_pooler:
              $ref: '#/components/schemas/SpatialPoolerHealthComponent'
            http_server:
              $ref: '#/components/schemas/HTTPServerHealthComponent'
            memory:
              $ref: '#/components/schemas/MemoryHealthComponent'
        system_metrics:
          $ref: '#/components/schemas/SystemMetrics'

    SpatialPoolerHealthComponent:
      type: object
      required:
        - status
        - engine_type
        - implementation
        - performance
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        engine_type:
          type: string
          enum: [production, test, mock]
        implementation:
          type: string
          example: "gonum-optimized"
        performance:
          type: object
          properties:
            avg_processing_time_ms:
              type: number
              format: float
              maximum: 100.0
            requests_processed:
              type: integer
              minimum: 0
            error_rate:
              type: number
              format: float
              minimum: 0
              maximum: 1

    SpatialPoolingRequest:
      type: object
      required:
        - input
        - request_id
        - client_id
      properties:
        input:
          $ref: '#/components/schemas/PoolingInput'
        config:
          $ref: '#/components/schemas/SpatialPoolerConfigInput'
        request_id:
          type: string
          format: uuid
        client_id:
          type: string
        integration_context:
          type: object
          properties:
            test_mode:
              type: boolean
              default: false
            validation_level:
              type: string
              enum: [basic, standard, production]
              default: production

    PoolingInput:
      type: object
      required:
        - encoder_output
        - input_id
      properties:
        encoder_output:
          $ref: '#/components/schemas/SDROutput'
        input_id:
          type: string
          format: uuid
        learning_enabled:
          type: boolean
          default: true
        metadata:
          type: object
          properties:
            sensor_type:
              type: string
            encoder_version:
              type: string
            request_source:
              type: string

    SDROutput:
      type: object
      required:
        - width
        - active_bits
        - sparsity
      properties:
        width:
          type: integer
          minimum: 1
          maximum: 10000
        active_bits:
          type: array
          items:
            type: integer
            minimum: 0
          maxItems: 500
        sparsity:
          type: number
          format: float
          minimum: 0.001
          maximum: 0.1

    SpatialPoolingResponse:
      type: object
      required:
        - result
        - metadata
        - performance
      properties:
        result:
          $ref: '#/components/schemas/PoolingResult'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        performance:
          $ref: '#/components/schemas/PerformanceMetrics'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningMessage'

    PoolingResult:
      type: object
      required:
        - sdr
        - input_id
        - processing_time_ms
        - sparsity_level
      properties:
        sdr:
          $ref: '#/components/schemas/SDROutput'
        input_id:
          type: string
          format: uuid
        processing_time_ms:
          type: number
          format: float
          maximum: 100.0
        active_columns:
          type: array
          items:
            type: integer
        avg_overlap:
          type: number
          format: float
          minimum: 0
          maximum: 1
        sparsity_level:
          type: number
          format: float
          minimum: 0.01
          maximum: 0.05
        learning_applied:
          type: boolean
        column_boost_applied:
          type: boolean

    ResponseMetadata:
      type: object
      required:
        - request_id
        - processing_timestamp
        - engine_version
      properties:
        request_id:
          type: string
          format: uuid
        processing_timestamp:
          type: string
          format: date-time
        engine_version:
          type: string
        htm_validation:
          type: object
          properties:
            sparsity_valid:
              type: boolean
            overlap_valid:
              type: boolean
            learning_valid:
              type: boolean

    PerformanceMetrics:
      type: object
      required:
        - actual_processing_time_ms
        - target_processing_time_ms
      properties:
        actual_processing_time_ms:
          type: number
          format: float
        target_processing_time_ms:
          type: number
          format: float
          default: 100.0
        memory_used_mb:
          type: number
          format: float
        cpu_time_ms:
          type: number
          format: float

    SpatialPoolerStatusResponse:
      type: object
      required:
        - engine_status
        - configuration
        - runtime_metrics
        - htm_properties
      properties:
        engine_status:
          type: object
          properties:
            implementation:
              type: string
              enum: [production, test, mock]
            engine_type:
              type: string
            version:
              type: string
            initialization_time:
              type: string
              format: date-time
            current_state:
              type: string
              enum: [initializing, ready, processing, error]
        configuration:
          $ref: '#/components/schemas/SpatialPoolerConfig'
        runtime_metrics:
          type: object
          properties:
            total_requests_processed:
              type: integer
            average_processing_time_ms:
              type: number
              format: float
            peak_processing_time_ms:
              type: number
              format: float
            memory_usage_mb:
              type: number
              format: float
            current_learning_iteration:
              type: integer
        htm_properties:
          type: object
          properties:
            current_sparsity_level:
              type: number
              format: float
            average_overlap_similarity:
              type: number
              format: float
            learning_convergence_rate:
              type: number
              format: float
            column_utilization:
              type: number
              format: float

    SpatialPoolerConfig:
      type: object
      required:
        - input_width
        - column_count
        - sparsity_ratio
        - learning_enabled
        - mode
      properties:
        input_width:
          type: integer
          minimum: 1
          maximum: 10000
        column_count:
          type: integer
          minimum: 1
          maximum: 10000
        sparsity_ratio:
          type: number
          format: float
          minimum: 0.01
          maximum: 0.05
        learning_enabled:
          type: boolean
        mode:
          type: string
          enum: [deterministic, random]
        performance_mode:
          type: string
          enum: [standard, optimized, debug]

    ErrorResponse:
      type: object
      required:
        - error
        - metadata
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
        metadata:
          type: object
          properties:
            request_id:
              type: string
              format: uuid
            timestamp:
              type: string
              format: date-time
            correlation_id:
              type: string

    ValidationErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            validation_errors:
              type: array
              items:
                type: string

    EngineErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            engine_details:
              type: object
              properties:
                error_type:
                  type: string
                stage:
                  type: string
                recovery_attempted:
                  type: boolean

    HTMValidationResponse:
      type: object
      required:
        - current_state
        - validation_results
      properties:
        current_state:
          type: object
          properties:
            sparsity_level:
              type: number
              format: float
            overlap_patterns:
              type: string
              enum: [valid, invalid, unknown]
            learning_convergence:
              type: number
              format: float
            column_utilization:
              type: number
              format: float
        validation_results:
          type: object
          properties:
            sparsity_in_range:
              type: boolean
            overlap_semantic_preservation:
              type: boolean
            learning_adaptation:
              type: boolean
            performance_requirements:
              type: boolean

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []

tags:
  - name: Health
    description: System health monitoring
  - name: Spatial Pooler
    description: Spatial pooler operations
  - name: Integration
    description: Integration-specific endpoints
  - name: Monitoring
    description: Performance and operational monitoring
  - name: Configuration
    description: Configuration management
  - name: Validation
    description: HTM property validation
  - name: Testing
    description: Test integration support